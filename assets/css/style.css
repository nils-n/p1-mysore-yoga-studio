/* general styling rules */
* {
    margin: 0 ;
    padding: 0;
    border: none;
    box-sizing: border-box;

}   

/* styling of the navigation elements */
.main-nav {
    display: flex;
    list-style: none;
    flex-wrap: nowrap;
    height: 100px;
    background-color: rgba(219,189,171,.1);

}

.main-nav > li {
    align-self: center;
    padding: 10px 15px;
}
  
.push {
    margin-left:auto;
}

.no-wrap{
    flex-shrink: 0;
  }

/* These are the imported fonts from google fonts  */
body{
    font-family: 'Montserrat Alternates', sans-serif;
}

h1 {
    font-family: 'Lato', sans-serif;
}

h2, h3, h4, h5, h6 {
    font-family: 'Oswald', sans-serif;
}

section {
    background-color: rgba(219,189,171,.1);
}

/* add hero image section for mobile  */
#hero-image {
    height: 600px;
    width: 100%; 
    background: url("/assets/images/hero-image-mobile.jpg") no-repeat center center;
    display:flex;
    position: relative;
    justify-content: center;
    align-items: center;
}

/* welcome message on hero image for mobile */
#hero-text {
    color:   #54433A;
    position: absolute;
    opacity: 1.0;
    text-align: center;
    font-weight: 800;
    left:70%;
    bottom:  50%;
}

/* change display of hero image and text on larger screens  */
@media only screen and (min-width: 768px) {
    #hero-image {
        height: 55git 0px;
        width: 100%; 
        background: url("/assets/images/hero-image-wide.jpg") no-repeat center center;
    }
   
    #hero-text {
        color:   #54433A;
        position: absolute;
        opacity: 1.0;
        text-align: center;
        font-weight: 800;
        left:65%;
        bottom:  50%;
    }
}

/* change location of hero image text on a very large screen  */
@media only screen and (min-width: 1500px) {
    #hero-text {
        left: 60%;
    }
}

#hero-text h1 {
    font-size: 2rem;
    font-weight: bold;
    margin-top: 1rem;
}

/* add a button style to the page */
.button {
    background-color: #AFC9B4;
    border: 0;
    color: white;
    font-weight: 600;
    line-height: 1;
    margin-top: 1.5rem;
    padding: 0.5rem;
    width: 90%;
    border-radius: 5px; 
}

/* Media query to make button look smaller on larger screen */
@media screen and (min-width: 1000px) {
    .button {
        width: 100px;
    }
}

/* style elements for the studio ethos */
#studio-ethos {
    height: 600px;
    text-align: center;
    display: flex;
    flex-direction: column;
    justify-content: center;
    margin-left: auto;
    margin-right: auto;
    width: 60%; 

}

#ethos-background{
    height: 600px;
    background-color: #DBBDAB;
    opacity: 10%; 
    position: absolute;
    left: 0;
    right: 0;
    bottom: 0;
    top: 700px;
}

#studio-ethos > div {
    line-height: 140%;
    padding: 20px 0;
}

#studio-ethos h1 {
    font-weight: bold;
}

#studio-ethos p {
    margin-top: 20px;
    text-align: left;
}


/* schedule is a flexbox in a mobile setting and a grid in a desktop display*/
.schedule {
    display: flex wrap;
    flex-direction: column;
    padding: 0 10px;
    /* background-color: rgba(219,189,171,.1); */
    background-color: rgba(122,147,127,.1);
}

/* on mobile, all of the days fall in one column. So, we don't need to take care of its grid position and can just align them. */
.monday-0800-0900,
.monday-0900-1000,
.monday-1000-1100,
.tuesday-0900-1000,
.wednesday-0800-0900,
.wednesday-0900-1000,
.wednesday-0900-1000,
.thursday-0900-1100,
.friday-1000-1100
{
    align-self: center;
}

/* make times disappear on mobile */
.time-slot {
    display: none;
}

/* flex item of the current day - this should be just above the daily schedule on a mobile display */
.day {
    display: block;
    padding: 10px 5px 5px;
    position: sticky;
    top: 0;
    z-index: 1000;
    background-color: rgba(219,189,171,.1);

}

/* define here the location on each session in a desktop setting */
@media only screen and (min-width: 768px) {
    .schedule {
        display: grid;
        grid-gap: 1rem;
        grid-template-rows:
            [days] auto 
            [time-0800] 1fr
            [time-0830] 1fr
            [time-0900] 1fr
            [time-0930] 1fr
            [time-1000] 1fr
            [time-1030] 1fr
            [time-1100] 1fr
            [time-1130] 1fr
            [time-1200] 1fr;
        grid-template-columns: 
            [times] 4em
            [day-1-start] 1fr
            [day-1-end day-2-start] 1fr
            [day-2-end day-3-start] 1fr
            [day-3-end day-4-start] 1fr
            [day-4-end day-5-start] 1fr
            [day-5-end];
    }
    
    .time-slot {
        display: block;
        grid-column: times;
    }

    /* grid item of the current days. This should be in the first row on large displays.  */
    .day-monday {
        grid-column: day-1; grid-row: days/ time-0800;
    }
    .day-tuesday {
        grid-column: day-2; grid-row: days/ time-0800;
    }
    .day-wednesday {
        grid-column: day-3; grid-row: days/ time-0800;
    }
    .day-thursday {
        grid-column: day-4; grid-row: days/ time-0800;
    }
    .day-friday {
        grid-column: day-5; grid-row: days/ time-0800;
    }

    /* grid item of the individual classes on a mobile display. Since they lie on a 2D grid, their position is defined individually on large screens. */
    .monday-0800-0900{
        grid-column: day-1; grid-row: time-0800 / time-0900;
    }

    .monday-0900-1000{
        grid-column: day-1; grid-row: time-0900 / time-1000;
    }

    .monday-1000-1100{
        grid-column: day-1; grid-row: time-1000 / time-1100;
    }

    .tuesday-0900-1000{
        grid-column: day-2; grid-row: time-0900 / time-1000;
    }

    .wednesday-0800-0900{
        grid-column: day-3; grid-row: time-0800 / time-0900;
    }

    .wednesday-0900-1000{
        grid-column: day-3; grid-row: time-0900 / time-1000;
    }

    .wednesday-1000-1100{
        grid-column: day-3; grid-row: time-1000 / time-1100;
    }
    .thursday-0900-1000{
        grid-column: day-4; grid-row: time-0900 / time-1000;
    }
    .friday-1000-1100{
        grid-column: day-5; grid-row: time-1000 / time-1100;
    }

}

/* styling of the individual classes  */
.yoga-beginner {
    background-color: #54433A;
    color: white;
    padding: 0 10px;
    border-radius: 5px; 
}

.yoga-vinyasa {
    background-color: #AFC9B4;
    color: white;
    padding: 0 10px;
    border-radius: 5px; 
}

.yoga-ashtanga {
    background-color: #7A937F;
    color: white;
    padding: 0 10px;
    border-radius: 5px; 
}

/* styling that all classes have in common */
.session {
    padding: .5em;
    border-radius: 2px;
    font-size: 15px;
    box-shadow:
      rgba(255,255,255,.6) 1px 1px 0,
      rgba(0,0,0,.3) 4px 4px 0;
  }

.class-title,
.class-time,
.class-teacher,
.class-link {
  display: block;
}

.time-slot {
  font-weight: bold;
}

/* styling of the section with contact and google maps. if mobile screen, display address details and map as two blocks*/
.contact-container {
    height: 600px;
    display: flex ;
    flex-direction: column;
    background-color: rgba(219,189,171,.1);
}

.contact-container h2 {
    padding: 40px 0 20px 0;
}

.contact-item{
    display: flex;
    flex-grow: 1;
    justify-content: space-evenly;
    align-content: center;
}

#map {
    display: block;
    width: 100%;
    height: 300px;
    justify-content: stretch;
    align-content: stretch;
}

/* if desktop screen, display address next to the map  */
@media only screen and (min-width: 768px) {
    .contact-container {
        flex-direction: row;
    }

    #map {
        height: 400px;
        width: 100%;
    }
}

/* styling of the footer  */
footer {
    width: 100%;
    height: 100px;
    text-transform: uppercase;
    text-align: center;
    background-color: #AFC9B4;
    color: #54433A;
    padding: 25px 15px;
    font-family: 'Lato', sans-serif; 
    font-weight: bold;
}

footer > a {
    padding: 0px 15px;
    font-size: 15px;
    font-weight: bold;

}

footer  p {
    padding: 0 25px;
    font-size: 15px;
}

